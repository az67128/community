// For now, this returns resources with any tag overlap.
// `tags` is a `Set`
export const filterResourcesByTags = (resources, tags) => {
  if (!tags || !tags.size) return resources;
  return resources.filter(resource => {
    for (const tag of resource.tags) {
      if (tags.has(tag)) return true;
    }
    return false;
  });
};

// https://stackoverflow.com/a/3177838
export function timeSince(date) {
  var seconds = Math.floor((new Date() - date) / 1000);
  var interval = Math.floor(seconds / 31536000);
  if (interval > 1) {
    return interval + " years";
  }
  interval = Math.floor(seconds / 2592000);
  if (interval > 1) {
    return interval + " months";
  }
  interval = Math.floor(seconds / 86400);
  if (interval > 1) {
    return interval + " days";
  }
  interval = Math.floor(seconds / 3600);
  if (interval > 24) {
    return "yesterday";
  }
  return "today";
}